\BOOKMARK [1][-]{section.1}{INTRODUCTION}{}% 1
\BOOKMARK [2][-]{subsection.1.1}{EVOLUTION\204FROM AN ART FORM TO A N ENGINEERING DISCIPLINE}{section.1}% 2
\BOOKMARK [3][-]{subsubsection.1.1.1}{Evolution of an Art into an Engineering Discipline}{subsection.1.1}% 3
\BOOKMARK [2][-]{subsection.1.2}{SOFTWARE DEVELOPMENT PROJECTS}{section.1}% 4
\BOOKMARK [3][-]{subsubsection.1.2.1}{Types of Software Development Projects}{subsection.1.2}% 5
\BOOKMARK [1][-]{section.2}{SOFTWARE LIFE CYCLE MODELS}{}% 6
\BOOKMARK [2][-]{subsection.2.1}{A FEW BASIC CONCEPTS}{section.2}% 7
\BOOKMARK [3][-]{subsubsection.2.1.1}{Software life cycle}{subsection.2.1}% 8
\BOOKMARK [2][-]{subsection.2.2}{WATERFALL MODEL AND ITS EXTENSIONS}{section.2}% 9
\BOOKMARK [3][-]{subsubsection.2.2.1}{Classical Waterfall Model}{subsection.2.2}% 10
\BOOKMARK [1][-]{section.3}{SOFTWARE PROJECT MANAGEMENT}{}% 11
\BOOKMARK [2][-]{subsection.3.1}{ SOFTWARE PROJECT MANAGEMENT COMPLEXITIES}{section.3}% 12
\BOOKMARK [3][-]{subsubsection.3.1.1}{Invisibility}{subsection.3.1}% 13
\BOOKMARK [2][-]{subsection.3.2}{RESPONSIBILITIES OF A SOFTWARE PROJECT MANAGER}{section.3}% 14
\BOOKMARK [3][-]{subsubsection.3.2.1}{Job Responsibilities for Managing Software Projects}{subsection.3.2}% 15
\BOOKMARK [1][-]{section.4}{REQUIREMENTS ANALYSIS AND SPECIFICATION}{}% 16
\BOOKMARK [2][-]{subsection.4.1}{An overview of requirements analysis and specification phase}{section.4}% 17
\BOOKMARK [2][-]{subsection.4.2}{Who carries out requirements analysis and specification?}{section.4}% 18
\BOOKMARK [1][-]{section.5}{SOFTWARE DESIGN}{}% 19
\BOOKMARK [2][-]{subsection.5.1}{OVERVIEW OF THE DESIGN PROCESS}{section.5}% 20
\BOOKMARK [3][-]{subsubsection.5.1.1}{Outcome of the Design Process}{subsection.5.1}% 21
\BOOKMARK [2][-]{subsection.5.2}{HOW TO CHARACTERISE A GOOD SOFTWARE DESIGN?}{section.5}% 22
\BOOKMARK [3][-]{subsubsection.5.2.1}{Correctness}{subsection.5.2}% 23
\BOOKMARK [3][-]{subsubsection.5.2.2}{Understandability}{subsection.5.2}% 24
\BOOKMARK [1][-]{section.6}{FUNCTION-ORIENTED SOFTWARE DESIGN}{}% 25
\BOOKMARK [2][-]{subsection.6.1}{ OVERVIEW OF SA/SD METHODOLOGY}{section.6}% 26
\BOOKMARK [2][-]{subsection.6.2}{STRUCTURED ANALYSIS}{section.6}% 27
\BOOKMARK [1][-]{section.7}{OBJECT MODELLING USING UML}{}% 28
\BOOKMARK [2][-]{subsection.7.1}{BASIC OBJECT-ORIENTATION CONCEPTS}{section.7}% 29
\BOOKMARK [2][-]{subsection.7.2}{UNIFIED MODELLING LANGUAGE \(UML\)}{section.7}% 30
\BOOKMARK [1][-]{section.8}{OBJECT-ORIENTED SOFTWARE DEVELOPMENT}{}% 31
\BOOKMARK [2][-]{subsection.8.1}{Object-oriented analysis \(OOA\) ver sus object-oriented design \(OOD\)}{section.8}% 32
\BOOKMARK [2][-]{subsection.8.2}{An OOAD methodology}{section.8}% 33
\BOOKMARK [1][-]{section.9}{USER INTERFACE DESIGN}{}% 34
\BOOKMARK [2][-]{subsection.9.1}{ CHARACTERISTICS OF A GOOD USER INTERFACE}{section.9}% 35
\BOOKMARK [2][-]{subsection.9.2}{BASIC CONCEPTS}{section.9}% 36
\BOOKMARK [3][-]{subsubsection.9.2.1}{User Guidance and On-line Help}{subsection.9.2}% 37
\BOOKMARK [1][-]{section.10}{CODING AND TESTING}{}% 38
\BOOKMARK [2][-]{subsection.10.1}{CODING}{section.10}% 39
\BOOKMARK [3][-]{subsubsection.10.1.1}{Coding Standards and Guidelines}{subsection.10.1}% 40
\BOOKMARK [2][-]{subsection.10.2}{CODE REVIEW}{section.10}% 41
\BOOKMARK [3][-]{subsubsection.10.2.1}{Code Walkthrough}{subsection.10.2}% 42
